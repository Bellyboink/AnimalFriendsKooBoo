
@using Kooboo.CMS.Content.Models;
@using Kooboo.CMS.Content.Query;
@{ var schema = (Kooboo.CMS.Content.Models.Schema)ViewData["Schema"];
    var allowedEdit = (bool)ViewData["AllowedEdit"];
    var allowedView = (bool)ViewData["AllowedView"];
    var parentUUID = ViewContext.RequestContext.AllRouteValues()["parentUUID"];
    var parentFolder=ViewContext.RequestContext.AllRouteValues()["parentFolder"];
}
@using(Html.BeginForm(ViewContext.RequestContext.AllRouteValues()["action"].ToString()
    , ViewContext.RequestContext.AllRouteValues()["controller"].ToString()
    , ViewContext.RequestContext.AllRouteValues()
    , FormMethod.Post
    , new RouteValueDictionary(new { enctype = "application/x-www-form-urlencoded" })))
{
    <table><tr>
            <th>
            <label for="Header">Header</label>
            </th>
            <td>
            <input class='long' id="Header" name="Header" type="text" value="@(Model.Header ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Header"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Text">Text</label>
            </th>
            <td>
            <textarea name="Text" id="Text" class="Text tinymce" media_library_url="@Url.Action("Selection","MediaContent",ViewContext.RequestContext.AllRouteValues()))" media_library_title ="@("Selected Files".Localize())" rows="10" cols="100">@( Model.Text ?? "")</textarea>            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Text"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="SortOrder">SortOrder</label>
            </th>
            <td>
            <input class="long" id="SortOrder" name="SortOrder" type="text" value="@(Model.SortOrder ?? "")"  data-val-number="The field SortOrder must be a number." data-val="true"/>            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["SortOrder"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="CssClass">CssClass</label>
            </th>
            <td>
            <input class='long' id="CssClass" name="CssClass" type="text" value="@(Model.CssClass ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["CssClass"], null)
            
            </td>          
            </tr>
            @if (allowedEdit) {
                <tr>
            <th>
           
            </th>
            <td>
            <input id='Published' name="Published" type="checkbox" @(Convert.ToBoolean(Model.Published)?"checked":"") value="true"/>
                                    <input type="hidden" value="false" name="Published"/>
            <label class="inline" for="Published">Published</label>
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Published"], null)
            </td>          
            </tr>
            }
    @Html.Action("Categories", ViewContext.RequestContext.AllRouteValues())
    
    </table>
}